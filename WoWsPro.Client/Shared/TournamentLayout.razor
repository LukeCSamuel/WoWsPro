@layout MainLayout
@inherits LayoutComponentBase
@inject ITournamentService TournamentService
@implements IDisposable

<div class="tournament-layout">
	<div class="side-nav">
		<div class="nav-container">
			<div class="tournament-icon">
				<NavLink class="home" href="/" Match="NavLinkMatch.All"><span class="fas fa-chevron-left"></span> Home</NavLink>
				<img src="@Context?.Icon" />
			</div>
			<nav>
				<NavLink href="@($"/tournament/{Context?.TournamentId}/info")">About</NavLink>
				<NavLink href="@($"/tournament/{Context?.TournamentId}/teams")">Teams</NavLink>
				<NavLink href="@($"/tournament/{Context?.TournamentId}/register")">Register</NavLink>
			</nav>
		</div>
		<div class="close">
			<button>
				<span class="fas fa-chevron-left"></span>
				<span class="fas fa-chevron-left"></span>
			</button>
		</div>
	</div>

	<div class="body">
		@Body
	</div>
</div>

@code {
	Tournament Context { get; set; }

	protected override Task OnInitializedAsync ()
	{
		TournamentService.CurrentUpdate += OnCurrentTournamentUpdate;
		Context = TournamentService.Current;
		return Task.CompletedTask;
	}

	void OnCurrentTournamentUpdate (object sender, Tournament tournament)
	{
		Context = tournament;
		StateHasChanged();
	}

	public void Dispose ()
	{
		TournamentService.CurrentUpdate -= OnCurrentTournamentUpdate;
	}
}