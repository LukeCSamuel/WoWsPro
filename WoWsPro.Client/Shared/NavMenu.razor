@inject IUserService UserService
@inject HttpClient Http
@inject NavigationManager Navigation
@implements IDisposable

<div class="nav-menu">
    <NavLink href="" class="brand" Match="NavLinkMatch.All">
        <div class="title">Wows.Pro</div>
        <img class="logo" src="/res/Logo.svg" alt="" />
    </NavLink>

    <div class="nav-links">
        @if (User?.IsLoggedIn ?? false)
        {
            <NavLink href="account">
                @User.PreferredName
            </NavLink>
        }
        else
        {
            <NavLink href="account/login">
                Sign in
            </NavLink>
        }
    </div>
</div>

@code {
	User User { get; set; }
	string LastLocation { get; set; }

	protected override async Task OnInitializedAsync ()
	{
		Navigation.LocationChanged += OnLocationChanged;
		UserService.UserUpdate += OnUserUpdated;

		User = await UserService.GetUserAsync();
	}

	async void OnLocationChanged (object sender, LocationChangedEventArgs args)
	{
		if (args.Location.Contains("account/login"))
		{
			await Http.PostAsync("api/Account/Referer", new StringContent(LastLocation));
		}
		LastLocation = Navigation.Uri;
	}

	void OnUserUpdated (object sender, User user)
	{
		User = user;
	}

	public void Dispose ()
	{
		UserService.UserUpdate -= OnUserUpdated;
		Navigation.LocationChanged -= OnLocationChanged;
	}
}
