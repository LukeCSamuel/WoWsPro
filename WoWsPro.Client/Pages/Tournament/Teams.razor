@page "/tournament/{tournamentId:long}/teams"
@inject ITournamentService TournamentService

<Loading Until="TournamentLoad">
	<div class="teams">
		<h1>All Teams</h1>
		@foreach (var team in Tournament.Teams.OrderBy(t => t.Tag))
		{
			<div class="team">
				@if (!string.IsNullOrEmpty(team.Icon))
				{
					<img class="icon" src="@team.Icon" />
				}
				<div>
					<h3>@($"[{team.Tag}] {team.Name}")</h3>
					<p>@team.Description</p>
				</div>
			</div>
		}
	</div>
</Loading>


@code {
	[Parameter]
	public long TournamentId { get; set; }

	Task TournamentLoad { get; set; }
	Tournament Tournament { get; set; }

	protected override async Task OnParametersSetAsync ()
	{
		TournamentLoad = TournamentService.SetCurrentTournamentIdAsync(TournamentId);
		Tournament = await TournamentService.Current;
	}
}
