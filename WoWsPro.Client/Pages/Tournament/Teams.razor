@page "/tournament/{tournamentId:long}/teams"
@inject ITournamentService TournamentService

<Loading Until="TournamentLoad">
	<Loading Until="TeamsLoad">
		<div class="teams">
			<h1>All Teams</h1>
			@foreach (var team in TeamsList.OrderBy(t => t.Tag))
			{
				<div class="team">
					@if (!string.IsNullOrEmpty(team.Icon))
					{
						<img class="icon" src="@team.Icon" />
					}
					<div>
						<h3>@($"[{team.Tag}] {team.Name}")</h3>
						<p>@team.Description</p>
					</div>
				</div>
			}
		</div>
	</Loading>
</Loading>


@code {
	[Parameter]
	public long TournamentId { get; set; }

	Task TournamentLoad { get; set; }
	Tournament Tournament { get; set; }

	Task TeamsLoad { get; set; }
	List<TournamentTeam> TeamsList { get; set; }

	protected override async Task OnParametersSetAsync ()
	{
		TournamentLoad = TournamentService.SetCurrentTournamentIdAsync(TournamentId);
		Tournament = await TournamentService.Current;

		TeamsLoad = TournamentService.CurrentTeams.Load;
		TeamsList = await TournamentService.CurrentTeams;
	}
}
