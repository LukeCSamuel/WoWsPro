@page "/tournament/{tournamentId:long}/teams"
@inject ITournamentService TournamentService

<Loading Until="TournamentLoad">
	<Loading Until="TeamsLoad">
		<div class="teams">
			@foreach (var region in Tournament.RegistrationRules)
			{
				var teams = TeamsList.Where(t => t.Region == region.Region).OrderBy(t => t.Tag).ToList();
				<h2>@region.Region Teams (@teams.Count):</h2>
				@foreach (var team in teams)
				{
					<TeamRoster TeamsList="TeamsList" Team="team" IsCollapsable="true" />
				}
			}
		</div>
	</Loading>
</Loading>


@code {
	[Parameter]
	public long TournamentId { get; set; }

	Task TournamentLoad { get; set; }
	Tournament Tournament { get; set; }

	Task TeamsLoad { get; set; }
	List<TournamentTeam> TeamsList { get; set; }

	protected override async Task OnParametersSetAsync ()
	{
		TournamentLoad = TournamentService.SetCurrentTournamentIdAsync(TournamentId);
		Tournament = await TournamentService.Current;

		TeamsLoad = TournamentService.CurrentTeams.Load;
		TeamsList = await TournamentService.CurrentTeams;
	}
}
